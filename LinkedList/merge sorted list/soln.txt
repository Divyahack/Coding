/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:

    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        
        if (!l1)
        {
         return l2;   
        }
        else if(!l2)
        {
            return l1;
        }
        else
        {
            ListNode *head , *list;
            if(l1->val <= l2->val) 
               {
                   head=l1;
                l1=l1->next;
               }
            else if(l1->val > l2->val)
            {
                head=l2;
                l2=l2->next;
            }
            
        list=head;
            
            while(l1 && l2)
            {
                
                  if(l1->val > l2->val)
                  {
                     
                    list->next=l2;
                      list=list->next;
                      l2=l2->next;
                      
                  }
                  else if(l1->val <= l2->val)
                  {
                   list->next=l1;
                      list=list->next;
                    l1=l1->next;
                      
                   }
             }
            
            if(l1)
            {
                list->next=l1;
            }
            if(l2)
            {
                list->next=l2;
            }
                
        
        return head;
        }
    }
        
    
    };
