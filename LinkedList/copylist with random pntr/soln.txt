/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/
class Solution {
public:
    Node* copyRandomList(Node* head) {
     if(head==NULL)
         return NULL;
        Node *p=head;
        while(p)
        {
            Node *newnode=new Node (p->val);
            newnode->next=p->next;
            newnode->random=p->random;
            p->next=newnode;
            p=newnode->next;
        }
        p=head;
        while(p && p->next)
        {
            if(p->random)
                p->next->random=p->random->next;
            p=p->next->next;
        }
        p=head;
        Node *dummy=new Node(0);
        Node *p2=dummy;
        while(p && p->next)
        {
            p2->next=p->next;
            p2=p2->next;
            p->next=p->next->next;
            p=p->next;
        }
        p2->next=NULL;
        return dummy->next;
    }
};
