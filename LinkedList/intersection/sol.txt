/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        ListNode *t1=headA;
        ListNode *t2=headB;
        int count1=0, count2=0;
        
        if(t1==NULL || t2==NULL)
            return NULL;
   
        else{
                while(t1!=NULL)
                       {
                     count1++;
                     t1=t1->next;
                       
                       }
                while(t2!=NULL)
                {
                  count2++;
                  t2=t2->next;
                 }

            ListNode *startA=headA;
            ListNode *startB=headB;
        
        ////    first list is long 
        int skip=0;
        int flag=0;

        if (count1>count2)
        {
        skip=count1-count2;
            for(int i=0;i<skip;i++)
                startA=startA->next;
           
        
        while(startA != startB)
        {
              
                startA=startA->next;
                startB=startB->next;
         }
            return startA;
            
        }
        
        
            
        else
        {
            skip=count2-count1;
            for(int i=0;i<skip;i++)
                startB=startB->next;
           
       
        while(startA != startB)
        {
        
                startA=startA->next;
                startB=startB->next;
        }
            return startA;
        }
            
        
            
        }
    }
};
        
    