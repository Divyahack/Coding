
class Solution {
public:
    
  static bool comp(vector<int> &a,vector<int> &b) {
	return a[0]<b[0];
}
    int eraseOverlapIntervals(vector<vector<int>>& intervals) {
        if(intervals.size()<2)
            return 0;
        
        sort(intervals.begin() , intervals.end() , comp);
        int count=0;  // count no of removing intervals
        int last_included=0;
        
        for(int i=1;i<intervals.size();i++)
        {
            // overlapping
            if(intervals[i][0]<intervals[last_included][1])
            {
                // case 1   -- end of i is less than end of last_included , so we remove lat_included & choose i
                if(intervals[i][1]<intervals[last_included][1])
                {
                    last_included=i;
                    count++;
                }
                else    // case2 : end of i > last_included end , so we remove i
                    count++;
            }
            // non overlapping
            else   
                last_included=i;
                
        }
        return count;
    }
};




