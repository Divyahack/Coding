

class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> res;
        int rows=matrix.size();
        if(!rows)
            return {};
        int cols=matrix[0].size();
        int top=0 , down=rows-1  , left =0 , right =cols-1;
        int dir=0;         //  0 ,1,2,3 for all dirn
        while(left<=right && top<=down)
        {
            //case1
            if(dir==0)
            {
                for(int i=left ;i<=right;i++)
                    res.push_back(matrix[top][i]);
                top=top+1;
            }
            
            //case2
            else if(dir==1)
            {
                for(int i=top ;i<=down;i++)
                    res.push_back(matrix[i][right]);
                right=right-1;
            }
            
            //case3
            if(dir==2)
            {
                for(int i=right ;i>=left;i--)
                    res.push_back(matrix[down][i]);
                down=down-1;
            }
            
            //case4
            if(dir==3)
            {
                for(int i=down ;i>=top;i--)
                    res.push_back(matrix[i][left]);
                left=left+1;
            }
            dir=(dir+1)%4;
        }
        return res;
    }
};


