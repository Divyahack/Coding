class Solution {
public:
    void help(vector<int> candidates, int target , vector<int> curr,vector<vector<int>> &res , int start)
    {
        if(target==0)
        {
            res.push_back(curr);
            return;
        }
        for(int i=start ;i<candidates.size();i++)
        {
           if(candidates[i]>target)
               break;
            if(i>start && candidates[i]==candidates[i-1])continue;
            
            curr.push_back(candidates[i]);
            help(candidates , target-candidates[i] , curr , res , i+1);    // 'i+1' becoz we cannot again choose that ele
            curr.pop_back();
        }
        
    }
    
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<int>curr;
        vector<vector<int>> res;
        sort(candidates.begin() , candidates.end());
        help(candidates , target , curr , res , 0);
        return res;
    }
};

