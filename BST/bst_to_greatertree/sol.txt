class Solution {
public:
    TreeNode* convertBST(TreeNode* root) {
      if(!root)
          return NULL;
        stack<int> s1 , s2;
        inorder_s1(root , s1);
        while(!s1.empty())
        {
            if(s2.empty())
            {
                s2.push(s1.top());
                s1.pop();
            }
            else
            {
                s2.push(s2.top()+s1.top());
                s1.pop();
            }
        }
        
        // s2 is new inorder stack
        inorder_s2(root , s2);
        return root;
            
    }
    
    void inorder_s1 (TreeNode*root , stack<int>& s1)
    {
        if(!root)
            return;
        inorder_s1(root->left , s1);
        s1.push(root->val);
        inorder_s1(root->right , s1);
    }
    
    void inorder_s2 (TreeNode*root , stack<int>& s2)
    {
        if(!root)
            return;
        inorder_s2(root->left , s2);
        root->val=s2.top();
        s2.pop();
        inorder_s2(root->right , s2);
    }
};