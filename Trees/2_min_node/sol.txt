/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    priority_queue<int> max_heap;
    unordered_set<int> s;
    int findSecondMinimumValue(TreeNode* root) {
         if(!root)
             return 0;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty())
        {
            TreeNode * temp=q.front();
                q.pop();
            
           if(s.find(temp->val)==s.end()) // not found
           {
               max_heap.push(temp->val);
               s.insert(temp->val);
           }
            if(max_heap.size()>2)
                max_heap.pop();
            if(temp->left)
                q.push(temp->left);
            
            if(temp->right)
                q.push(temp->right);
            
        }
        if(max_heap.size()>1)
           return max_heap.top();
        else
            return -1;
    }
};
