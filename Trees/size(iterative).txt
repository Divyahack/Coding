










// size of tree using level order (without recursion)
#include<iostream>
#include<bits/stdc++.h>
using namespace std;
struct Node
{
    int data;
    Node *left , *right;
    Node(int d)
    {
        data=d;
        left=right=NULL;
    }
};
int size(Node * root)
{
    int count=0;
    queue<Node*> q;
    Node *temp;
    if (!root)
       return 0;
   
   q.push(root);
   while(!q.empty())
   {
       temp=q.front();
       q.pop();
       count++;
              if(temp->left)
                 q.push(temp->left);
             
              if(temp->right)
                  q.push(temp->right);
   }
   return count;
   
}

int main()
{
    Node *root = new Node(1);
    root->left=new Node(2);
    root->right=new Node(3);
    root->left->left=new Node(4);
    root->left->right=new Node(5);
    
   cout<<"\n Size of Tree is  : "<<size(root);
    return 0;
}


