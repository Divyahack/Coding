
/*
Find K Closest Elements
Given a sorted array arr, two integers k and x, find the k closest elements to x in the array. The result should also be sorted in ascending order.
 If there is a tie, the smaller elements are always preferred. 

Example 1:

Input: arr = [1,2,3,4,5], k = 4, x = 3
Output: [1,2,3,4]
Example 2:

Input: arr = [1,2,3,4,5], k = 4, x = -1
Output: [1,2,3,4]
*/

class Solution {
public:
    vector<int> findClosestElements(vector<int>& arr, int k, int x) {
        vector<int> res;
        priority_queue<pair<int , int>> max_heap;
        for(int i=0;i<arr.size();i++)
        {
            max_heap.push(make_pair(abs(arr[i]-x) , arr[i]) );
            if(max_heap.size()>k)
                max_heap.pop();
        }
        
        while(!max_heap.empty())
        {
            res.push_back(max_heap.top().second);
            max_heap.pop();
        }
        sort(res.begin() , res.end());
        return res;
    }
};


