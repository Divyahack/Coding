//1 version
class Solution {
public:
    bool isAnagram(string s, string t) {
        int counts[26]{0};
        for(int i = 0; i < s.length(); ++i) 
            counts[s[i]-'a']++;
        for(int i = 0; i < t.length(); ++i)
            counts[t[i]-'a']--;
        for(int i = 0; i < 26; ++i)
            if(counts[i]!=0)
                return false;
      
         return true;
    }
};

//2 version

class Solution {
public:
    bool isAnagram(string s, string t) {
 
 if(s.size() == 0 && t.size() == 0) 
     return true;
        sort(s.begin(), s.end());
        sort(t.begin(), t.end());
        if(s==t)
            return true;
        else 
            return false;
    }
};


//3 version
class Solution {
public:
    bool isAnagram(string s, string t) {
     unordered_map<char , int> map_s;
        unordered_map<char , int> map_t;
    for(auto x : s)
    {
        map_s[x]++;
    }
    
    for(auto z : t)
    {
        map_t[z]++;
    }
    
    return map_s == map_t;  
    }
};


