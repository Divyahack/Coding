class Solution {
public:
   
    void fill_up(vector<vector<char>>& board, int i, int j)
    {
        if(i==-1 || j==-1 || i==board.size() || j==board[0].size() || board[i][j]!='O')
            return ;
        board[i][j] = 'a';
        fill_up(board, i-1, j);
        fill_up(board, i+1, j);
        fill_up(board, i, j-1);
        fill_up(board, i, j+1);
    }
public:
    void solve(vector<vector<char>>& board) 
    {
       int  r = board.size();
        if(!r)return;
        int c = board[0].size();
        for(int i = 0; i < r; i++)
            for(int j = 0;  j < c; j++)
                if((i==0 || j==0 || i==r-1 || j==c-1) && board[i][j]=='O')  // only boundary ele
                    fill_up(board, i, j);
        for(int i = 0; i < r; i++)
            for(int j = 0;  j < c; j++)
            {
                if(board[i][j] == 'a')
                    board[i][j] = 'O';
                else 
                    board[i][j] = 'X';
            }
    }
};


