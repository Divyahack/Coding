
DFS traversal


#include<iostream>
#include<bits/stdc++.h> 
using namespace std; 

void addEdge(list<int> adj[], int v, int w) 
{ 
	adj[v].push_back(w); // Add w to vâ€™s list. 
} 

void DFS(int s, bool visited[] , list<int> adj[]) 
{ 
    
	visited[s] = true; 
	cout << s << " "; 
   list<int>::iterator i; 
	for (i = adj[s].begin(); i != adj[s].end(); i++) 
		if (visited[*i]==false) 
			DFS(*i, visited , adj); 
} 
int main() 
{ 
    
	int V; // No. of vertices 
	list<int> adj[V]; 
 
	addEdge(adj ,0, 1); 
	addEdge(adj ,0, 2); 
	addEdge(adj ,1, 2); 
	addEdge(adj ,2, 0); 
	addEdge(adj ,2, 3); 
	addEdge(adj ,3, 3); 

	cout << "Following is Depth First Traversal"
			" (starting from vertex 2) \n"; 
 
	bool visited[V]; 
	for (int i = 0; i < V; i++) 
		visited[i] = false; 
   
	DFS(2, visited , adj);  // starting pos=2
	return 0; 
} 
